"""rename tables

Revision ID: d93da39c2cdd
Revises: 15ec0f788a8a
Create Date: 2024-08-09 16:59:21.712464

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "d93da39c2cdd"
down_revision: Union[str, None] = "15ec0f788a8a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cars",
        sa.Column("brand", sa.String(length=16), nullable=False),
        sa.Column("model", sa.String(length=16), nullable=False),
        sa.Column("year", sa.Integer(), nullable=False),
        sa.Column("fuel_type", sa.String(length=16), nullable=False),
        sa.Column("transmission", sa.String(length=16), nullable=False),
        sa.Column("mileage", sa.Integer(), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_cars_brand"), "cars", ["brand"], unique=False)
    op.create_index(op.f("ix_cars_id"), "cars", ["id"], unique=True)
    op.create_table(
        "users",
        sa.Column("hashed_password", sa.LargeBinary(), nullable=True),
        sa.Column("email", sa.String(length=32), nullable=True),
        sa.Column("name", sa.String(length=16), nullable=False),
        sa.Column(
            "is_admin", sa.Boolean(), server_default="false", nullable=False
        ),
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=True)
    op.create_index(op.f("ix_users_name"), "users", ["name"], unique=False)
    op.drop_index("ix_user_email", table_name="user")
    op.drop_index("ix_user_id", table_name="user")
    op.drop_index("ix_user_name", table_name="user")
    op.drop_table("user")
    op.drop_index("ix_car_brand", table_name="car")
    op.drop_index("ix_car_id", table_name="car")
    op.drop_table("car")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "car",
        sa.Column(
            "brand", sa.VARCHAR(length=16), autoincrement=False, nullable=False
        ),
        sa.Column(
            "model", sa.VARCHAR(length=16), autoincrement=False, nullable=False
        ),
        sa.Column("year", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "fuel_type",
            sa.VARCHAR(length=16),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "transmission",
            sa.VARCHAR(length=16),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "mileage", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("price", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="car_pkey"),
    )
    op.create_index("ix_car_id", "car", ["id"], unique=True)
    op.create_index("ix_car_brand", "car", ["brand"], unique=False)
    op.create_table(
        "user",
        sa.Column(
            "hashed_password",
            postgresql.BYTEA(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "email", sa.VARCHAR(length=32), autoincrement=False, nullable=True
        ),
        sa.Column(
            "name", sa.VARCHAR(length=16), autoincrement=False, nullable=False
        ),
        sa.Column(
            "is_admin",
            sa.BOOLEAN(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="user_pkey"),
    )
    op.create_index("ix_user_name", "user", ["name"], unique=False)
    op.create_index("ix_user_id", "user", ["id"], unique=True)
    op.create_index("ix_user_email", "user", ["email"], unique=True)
    op.drop_index(op.f("ix_users_name"), table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_cars_id"), table_name="cars")
    op.drop_index(op.f("ix_cars_brand"), table_name="cars")
    op.drop_table("cars")
    # ### end Alembic commands ###
